import sys
from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QLineEdit, QPushButton, QTextBrowser
from search_info import OntologySearch

class SearchPopup(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á")
        self.setGeometry(100, 100, 600, 500)
        self.initUI()

    def initUI(self):
        layout = QVBoxLayout()

        self.search_input = QLineEdit(self)
        self.search_input.setPlaceholderText("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà, ‡∏î‡∏≠‡∏¢‡∏™‡∏∏‡πÄ‡∏ó‡∏û, ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ OTOP...")
        layout.addWidget(self.search_input)

        self.search_button = QPushButton("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤", self)
        self.search_button.clicked.connect(self.search)
        self.search_button.setFixedHeight(40)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°
        layout.addWidget(self.search_button)

        self.clear_button = QPushButton("üßπ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", self)
        self.clear_button.clicked.connect(self.clear_results)
        self.clear_button.setFixedHeight(40)
        layout.addWidget(self.clear_button)

        self.result_box = QTextBrowser(self)
        layout.addWidget(self.result_box)

        self.setLayout(layout)
        self.ontology = OntologySearch("mytourism.owl")  # ‡πÇ‡∏´‡∏•‡∏î OWL

    def search(self):
        query_text = self.search_input.text()
        try:
            results = self.ontology.search_info(query_text)  # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            if results:
                display_text = ""
                for subject, properties in results.items():
                    display_text += f"\nüåç **{subject}**\n" + "\n".join(properties) + "\n"
                    
                    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ô‡∏µ‡πâ (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤)
                    full_info = self.ontology.get_full_info(subject)
                    if full_info:
                        display_text += "\n‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î:\n"
                        display_text += "\n".join(full_info) + "\n"
                
                self.result_box.setText(display_text)
            else:
                self.result_box.setText("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á")
        except Exception as e:
            self.result_box.setText(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")

    def clear_results(self):
        """ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå """
        self.search_input.clear()
        self.result_box.clear()

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = SearchPopup()
    window.show()
    sys.exit(app.exec())
